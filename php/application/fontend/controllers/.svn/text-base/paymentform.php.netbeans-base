<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Paymentform extends CI_Controller {

    var $data;

    function __construct() {
        parent::__construct();
        $this->load->library('form_validation');
        $this->load->database();
        $this->load->helper('form');
        $this->load->library('document');
        $this->load->helper('url');
        $this->load->library('pagination');
        $this->lang->load('paymentform');
    }

    public function index() {
        $this->document->setTitle($this->lang->line('headding_title'));

        $this->data['title'] = $this->document->getTitle();

        $this->data['headding_title'] = $this->lang->line('headding_title');
        $this->data['text_notice1'] = $this->lang->line('text_notice1');
        $this->data['text_notice2'] = $this->lang->line('text_notice2');
        $this->data['text_step1'] = $this->lang->line('text_step1');
        $this->data['text_step2'] = $this->lang->line('text_step2');
        $this->data['text_step3'] = $this->lang->line('text_step3');
        $this->data['text_step4'] = $this->lang->line('text_step4');
        $this->data['text_step5'] = $this->lang->line('text_step5');
        $this->data['text_step6'] = $this->lang->line('text_step6');
        $this->data['text_step7'] = $this->lang->line('text_step7');
        $this->data['text_step8'] = $this->lang->line('text_step8');
        $this->data['text_step9'] = $this->lang->line('text_step9');
        $this->data['text_adv_title'] = $this->lang->line('text_adv_title');
        $this->data['text_adv_notice'] = $this->lang->line('text_adv_notice');
        $this->data['text_adv_step2'] = $this->lang->line('text_adv_step2');
        $this->data['text_adv_step3'] = $this->lang->line('text_adv_step3');
        $this->data['text_adv_step4'] = $this->lang->line('text_adv_step4');
        $this->data['text_baggage'] = $this->lang->line('text_baggage');
        $this->data['text_baggage_notice'] = $this->lang->line('text_baggage_notice');
        $this->data['text_request_method'] = $this->lang->line('text_request_method');
        $this->data['text_get'] = $this->lang->line('text_get');
        $this->data['text_post'] = $this->lang->line('text_post');
        $this->data['text_link'] = $this->lang->line('text_link');
        $this->data['button_generate'] = $this->lang->line('button_generate');
        $this->data['button_reset'] = $this->lang->line('button_reset');
        $this->data['text_sci'] = $this->lang->line('text_sci');
        $this->data['text_url'] = $this->lang->line('text_url');
        $this->data['text_html'] = $this->lang->line('text_html');
        $this->data['text_button'] = $this->lang->line('text_button');

        $this->data['url'] = site_url('api/acc_number');

        $this->load->model('currencies_model', '', TRUE);

        $currencies = $this->currencies_model->getCurrencies(1);

        $this->data['currencies'] = array();
        foreach ($currencies as $currencie) {

            $this->data['currencies'][] = array(
                'code' => $currencie->code,
                'title' => $currencie->title,
            );
        }
        $posts = $this->input->post();
        $this->form_validation->set_rules('acc_number', 'Account Number', 'required|trim|xss_clean|numeric|min_length[6]');
        $this->form_validation->set_rules('acc_customer', 'Customer account number', 'trim|xss_clean|numeric|min_length[6]');
        $this->form_validation->set_rules('forced', 'Comment', 'trim|xss_clean|specical_chars|min_length[6]|max_length[100]');
        $this->form_validation->set_rules('merchant', 'Merchant reference', 'trim|xss_clean|max_length[20]');
        $this->form_validation->set_rules('amount', 'Amount', 'numeric|trim|xss_clean|max_length[20]');
        $this->form_validation->set_rules('store_name', 'Store Name', 'trim|xss_clean|max_length[20]');
        $this->form_validation->set_rules('attribute11', 'Attribute', 'trim|xss_clean|max_length[10]');
        $this->form_validation->set_rules('attribute12', 'Attribute', 'trim|xss_clean|max_length[10]');
        $this->form_validation->set_rules('attribute21', 'Attribute', 'trim|xss_clean|max_length[10]');
        $this->form_validation->set_rules('attribute22', 'Attribute', 'trim|xss_clean|max_length[10]');
        $this->form_validation->set_rules('attribute31', 'Attribute', 'trim|xss_clean|max_length[10]');
        $this->form_validation->set_rules('attribute32', 'Attribute', 'trim|xss_clean|max_length[10]');
        if (!empty($posts['email_link'])) {
            $this->form_validation->set_rules('email_link', 'Merchant reference', 'trim|xss_clean|callback_check_url');
        }
        if (!empty($posts['url_success'])) {
            $this->form_validation->set_rules('url_success', 'Url Success', 'trim|xss_clean|min_length[6]|callback_check_url');
        }
        if (!empty($posts['url_fail'])) {
            $this->form_validation->set_rules('url_fail', 'Url Fail', 'trim|xss_clean|min_length[6]|callback_check_url');
        }
        $this->data['acc_number'] = '';
        if ($this->form_validation->run() == FALSE) {
            $this->data['main_content'] = 'paymentform/index.php';
            $this->load->view('home', $this->data);
        } else {

            $post = $this->input->post();

            if (isset($post['acc_number'])) {
                $this->data['acc_number'] = $post['acc_number'];
            } else {
                $this->data['acc_number'] = '';
            }
            if (isset($post['acc_customer'])) {
                $this->data['acc_customer'] = $post['acc_customer'];
            } else {
                $this->data['acc_customer'] = '';
            }
            if (isset($post['amount'])) {
                $this->data['amount'] = $post['amount'];
            } else {
                $this->data['amount'] = '';
            }
            if (isset($post['currency'])) {
                $this->data['currency'] = $post['currency'];
            } else {
                $this->data['currency'] = '';
            }
            if (isset($post['forced'])) {
                $this->data['forced'] = $post['forced'];
            } else {
                $this->data['forced'] = '';
            }
            if (isset($post['merchant'])) {
                $this->data['merchant'] = $post['merchant'];
            } else {
                $this->data['merchant'] = '';
            }
            if (isset($post['url_success'])) {
                $this->data['url_success'] = $post['url_success'];
            } else {
                $this->data['url_success'] = '';
            }
            if (isset($post['success_url_method'])) {
                $this->data['success_url_method'] = $post['success_url_method'];
            } else {
                $this->data['success_url_method'] = '';
            }
            if (isset($post['url_fail'])) {
                $this->data['url_fail'] = $post['url_fail'];
            } else {
                $this->data['url_fail'] = '';
            }
            if (isset($post['fail_url_method'])) {
                $this->data['fail_url_method'] = $post['fail_url_method'];
            } else {
                $this->data['fail_url_method'] = '';
            }
            if (isset($post['store_name'])) {
                $this->data['store_name'] = $post['store_name'];
            } else {
                $this->data['store_name'] = '';
            }
            if (isset($post['email_link'])) {
                $this->data['email_link'] = $post['email_link'];
            } else {
                $this->data['email_link'] = '';
            }
            if (isset($post['status_url_method'])) {
                $this->data['status_url_method'] = $post['status_url_method'];
            } else {
                $this->data['status_url_method'] = '';
            }
            if (isset($post['attribute11'])) {
                $this->data['attribute11'] = $post['attribute11'];
            } else {
                $this->data['attribute11'] = '';
            }
            if (isset($post['attribute12'])) {
                $this->data['attribute12'] = $post['attribute12'];
            } else {
                $this->data['attribute12'] = '';
            }
            if (isset($post['attribute21'])) {
                $this->data['attribute21'] = $post['attribute21'];
            } else {
                $this->data['attribute21'] = '';
            }
            if (isset($post['attribute22'])) {
                $this->data['attribute22'] = $post['attribute22'];
            } else {
                $this->data['attribute22'] = '';
            }
            if (isset($post['attribute31'])) {
                $this->data['attribute31'] = $post['attribute31'];
            } else {
                $this->data['attribute31'] = '';
            }
            if (isset($post['attribute32'])) {
                $this->data['attribute32'] = $post['attribute32'];
            } else {
                $this->data['attribute32'] = '';
            }
            if (isset($post['request_method'])) {
                $this->data['request_method'] = $post['request_method'];
            } else {
                $this->data['request_method'] = '';
            }

            $this->data['main_content'] = 'paymentform/index.php';

            $this->load->view('home', $this->data);
        }
    }

    public function check_url($url) {

        $urls = preg_match('|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i', $url);
        $this->form_validation->set_message('check_url', "URL is not valid. Please try again.");
        if ($urls == TRUE) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

}

?>