<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Setting extends CI_Controller {

    var $transaction_id;
    var $name;
    var $active;
    var $data;

    function __construct() {
        parent::__construct();
        $this->load->library('session');
        $this->load->library('ion_auth');
        $this->load->library('form_validation');
        $this->load->library('document');
        $this->load->database();
        $this->load->helper('form');
        $this->load->helper('cya_form');
        $this->load->helper('url');
        $this->load->library('pagination');
        $this->lang->load('setting');
        $this->load->model('setting_model', '', TRUE);
        $this->load->library('user_login');
        $module_name = $this->router->fetch_class();
        $action_name = $this->router->fetch_method();

        if (!$this->user_login->hasPermission($module_name, $action_name)) {
            $this->session->set_flashdata('permission', 'You do not have permission to access this page, please refer to your system administrator.');
            redirect('home');
        }
        $posts = $this->input->post();

        if ((!$this->session->userdata('admin_logged')) || (!$this->ion_auth->logged_in())) {
            redirect('login/index/', 'refresh');
        }
    }

    public function index() {

        $this->document->setTitle($this->lang->line('setting_title'));

        $this->data['title'] = $this->document->getTitle();

        $setting_groups = $this->setting_model->getSettingGroups();

        $this->data['setting_groups'] = array();

        //BOF: get default group
        $default_group = 0;
        try {
            $default_group = $setting_groups[0]->configuration_group_id;
        } catch (Exception $exc) {
            
        }
        $this->data['default_group'] = $default_group;
        //EOF: get default group       


        foreach ($setting_groups as $setting_group) {

            $this->data['setting_groups'][] = array(
                'configuration_group_id' => $setting_group->configuration_group_id,
                'configuration_group_title' => $setting_group->configuration_group_title,
            );
        }


        $this->data['setting_title'] = $this->lang->line('setting_title');
        $this->data['text_config'] = $this->lang->line('text_config');
        $this->data['main_content'] = 'setting/index.php';

        $this->load->view('main_board', $this->data);
    }

    function listSetting() {
        $this->document->setTitle($this->lang->line('setting_title'));

        $this->data['title'] = $this->document->getTitle();
        $this->data['colum_title'] = $this->lang->line('colum_title');
        $this->data['colum_descript'] = $this->lang->line('colum_descript');
        $this->data['colum_value'] = $this->lang->line('colum_value');
        $this->data['colum_action'] = $this->lang->line('colum_action');
        $this->data['button_edit'] = $this->lang->line('button_edit');

        $setting_groups = $this->setting_model->getSettingGroups();

        $this->data['setting_groups'] = array();
        //BOF: get default group
        $default_group = 0;
        try {
            $default_group = $setting_groups[0]->configuration_group_id;
        } catch (Exception $exc) {
            
        }
        $this->data['default_group'] = $default_group;
        //BOF: get default group
        $url = '';
        // set default group
        $g = $this->uri->segment(3);
        if (isset($g) && is_numeric($g)) {
            $group = $g;
        } else {
            $group = $default_group;
        }
        $p = $this->uri->segment(4);
        if (isset($p) && is_numeric($p)) {
            $page = $p;
        } else {
            $page = 1;
        }

        if ($group || $group == 0) {

            $total_setting = $this->setting_model->totalSettings($group);
            $data = array(
                'start' => ($page - 1) * 5,
                'limit' => 5
            );

            $settings = $this->setting_model->getSettings($group, $data);


            $this->data['settings'] = array();

            foreach ($settings as $setting) {
                if ($setting->configuration_id) {
                    $edit = site_url('setting/edit/' . $setting->configuration_id);
                }
                $this->data['settings'][] = array(
                    'configuration_id' => $setting->configuration_id,
                    'configuration_title' => $setting->configuration_title,
                    'configuration_description' => $setting->configuration_description,
                    'configuration_value' => $setting->configuration_value,
                    'edit' => $edit,
                );
            }

            $pagination = $this->pagination;
            $pagination->total = $total_setting;
            $pagination->page = $page;
            $pagination->limit = 5;
            $pagination->url = 'javascript:loadSetting(' . $group . ',{page});'; //site_url('setting/index/'.$group.'/' . '{page}');

            $this->data['pagination'] = $pagination->render();

            $this->load->view('setting/list', $this->data);
        }
    }

    function edit() {
        $this->data['headding_title'] = $this->lang->line('headding_title');
        $this->data['text_title'] = $this->lang->line('text_title');
        $this->data['text_des'] = $this->lang->line('text_des');
        $this->data['text_value'] = $this->lang->line('text_value');
        $this->data['button_save'] = $this->lang->line('button_save');
        $this->data['button_cancel'] = $this->lang->line('button_cancel');
        $this->data['button_close'] = $this->lang->line('button_close');

        $id = $this->uri->segment(3);

        if ($id) {
            $setting_info = $this->setting_model->getSetting($id);
            $this->data['configuration_id'] = $setting_info->configuration_id;
            $this->data['configuration_title'] = $setting_info->configuration_title;
            $this->data['configuration_description'] = $setting_info->configuration_description;
            $this->data['configuration_value'] = $setting_info->configuration_value;
            if (tep_not_null($setting_info->set_function)) {
                eval('$this->data["value_field"] = ' . $setting_info->set_function . '"' . htmlspecialchars($setting_info->configuration_value) . '");');
            } else {
                $this->data["value_field"] = '<input name="configuration_value" id="configuration_value" value="' . $setting_info->configuration_value . '">';
            }
        }
        if (($this->input->server('REQUEST_METHOD') === 'POST')) {

            $this->setting_model->update($this->uri->segment(3), $this->input->post());

            $json['success'] = $this->lang->line('text_success');

            echo json_encode($json);
            die;
        }
        $this->load->view('setting/edit', $this->data);
    }

}