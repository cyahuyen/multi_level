<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Question extends CI_Controller {

    var $question_id;
    var $question;
    var $data;
    private $error = array();

    function __construct() {
        parent::__construct();
        $this->load->library('ion_auth');
        $this->load->library('session');
        $this->load->library('form_validation');
        $this->load->database();
        $this->load->helper('form');
        $this->load->helper('url');
        $this->lang->load('question');
        $this->load->library('pagination');
        $this->load->library('document');
        $this->load->model('question_model', '', TRUE);
        $this->load->model('language_model', '', TRUE);
        $this->load->library('user_login');
        $module_name = $this->router->fetch_class();
        $action_name = $this->router->fetch_method();

        if (!$this->user_login->hasPermission($module_name, $action_name)) {
            $this->session->set_flashdata('permission', 'You do not have permission to access this page, please refer to your system administrator.');
            redirect('home');
        }
        $posts = $this->input->post();

        if ((!$this->session->userdata('admin_logged')) || (!$this->ion_auth->logged_in())) {
            redirect('login/index/', 'refresh');
        }
    }

    public function index() {
        $p = $this->uri->segment(3);
        if (isset($p)) {
            $page = $this->uri->segment(3);
        } else {
            $page = 1;
        }
        $this->document->setTitle($this->lang->line('headding_title'));

        $this->data['title'] = $this->document->getTitle();

        $this->data['headding_title'] = $this->lang->line('headding_title');
        $this->data['colum_name'] = $this->lang->line('colum_name');
        $this->data['colum_sort'] = $this->lang->line('colum_sort');
        $this->data['colum_status'] = $this->lang->line('colum_status');
        $this->data['colum_action'] = $this->lang->line('colum_action');

        $this->data['button_delete'] = $this->lang->line('button_delete');
        $this->data['button_edit'] = $this->lang->line('button_edit');
        $this->data['button_insert'] = $this->lang->line('button_insert');

        $data = array(
            'start' => ($page - 1) * 5,
            'limit' => 5
        );

        $total_questions = $this->question_model->totalQuestions();

        $questions = $this->question_model->getQuestions($data);

        $this->data['add_new'] = site_url('question/insert');

        $this->data['delete'] = site_url('question/delete');

        $this->data['questions'] = array();

        $session = $this->session->flashdata('message');
        if (isset($session)) {
            $this->data['success'] = $session;
        } else {
            $this->data['success'] = '';
        }

        foreach ($questions as $question) {
            if ($question->question_id) {
                $edit = site_url('question/update/' . $question->question_id);
            }
            $this->data['add_new'] = site_url('question/insert');

            $this->data['questions'][] = array(
                'question_id' => $question->question_id,
                'question' => $question->question,
                'status' => $question->status ? $this->lang->line('text_enabled') : $this->lang->line('text_disabled'),
                'sort_order' => $question->sort_order,
                'edit' => $edit,
                'selected' => isset($this->input->post['selected']) && in_array($question->question_id, $this->input->post['selected']),
            );
        }
        $pagination = $this->pagination;
        $pagination->total = $total_questions;
        $pagination->page = $page;
        $pagination->limit = 5;
        $pagination->url = site_url('question/index/' . '{page}');

        $this->data['pagination'] = $pagination->render();

        $this->data['main_content'] = 'question/index.php';

        $this->load->view('main_board', $this->data);
    }

    public function insert() {

        if (($this->input->server('REQUEST_METHOD') === 'POST') && $this->validateForm()) {

            $this->question_model->save($this->input->post());

            $this->session->set_flashdata('message', $this->lang->line('text_success'));

            redirect('question/index');
        }
        $this->getForm();
    }

    public function update() {

        if (($this->input->server('REQUEST_METHOD') === 'POST') && $this->validateForm()) {

            $this->question_model->update($this->uri->segment(3), $this->input->post());

            $this->session->set_flashdata('message', $this->lang->line('text_success'));

            redirect('question/index');
        }
        $this->getForm();
    }

    public function delete() {
        $select = $this->input->post('selected');
        if (!empty($select)) {
            foreach ($select as $id) {
                $this->question_model->delete($id);
                $this->session->set_flashdata('message', $this->lang->line('text_success'));
            }
        } else {
            $this->session->set_flashdata('message', $this->lang->line('text_no_check'));
        }
        redirect('question');
    }

    public function getForm() {

        $this->document->setTitle($this->lang->line('headding_title'));

        $this->data['title'] = $this->document->getTitle();

        $this->data['question_title'] = $this->lang->line('question_title');
        $this->data['text_name'] = $this->lang->line('text_name');
        $this->data['text_status'] = $this->lang->line('text_status');
        $this->data['text_order'] = $this->lang->line('text_order');
        $this->data['text_enabled'] = $this->lang->line('text_enabled');
        $this->data['text_disabled'] = $this->lang->line('text_disabled');
        $this->data['button_save'] = $this->lang->line('button_save');
        $this->data['button_cancel'] = $this->lang->line('button_cancel');
        $this->data['tab_general'] = $this->lang->line('tab_general');
        $this->data['tab_data'] = $this->lang->line('tab_data');

        $id = $this->uri->segment(3);

        if ($id) {
            $this->data['action'] = site_url('question/update/' . $id);
        } else {
            $this->data['action'] = site_url('question/insert');
        }
        if (!empty($this->error['question'])) {
            $this->data['error_question'] = $this->error['question'];
        } else {
            $this->data['error_question'] = array();
        }

        $this->data['cancel'] = site_url('question/index');

        $this->data['languages'] = $this->language_model->getLangs();

        if (isset($id) && ( $this->input->server('REQUEST_METHOD') != 'POST')) {
            $question_info = $this->question_model->getquestion($id);
        }

        if (isset($posts['question_description'])) {
            $this->data['question_description'] = $posts['question_description'];
        } elseif ($id) {
            $descriptions = $this->question_model->getQuestionDescription($id);
            foreach ($descriptions as $description) {
                $this->data['question_description'][$description['language_id']] = $description;
            }
        } else {
            $this->data['question_description'] = array();
        }

        if (isset($posts['sort_order'])) {
            $this->data['sort_order'] = $posts['sort_order'];
        } elseif (!empty($question_info)) {
            $this->data['sort_order'] = $question_info->sort_order;
        } else {
            $this->data['sort_order'] = '';
        }
        if (isset($posts['status'])) {
            $this->data['status'] = $posts['question'];
        } elseif (!empty($question_info)) {
            $this->data['status'] = $question_info->status;
        } else {
            $this->data['status'] = '';
        }
        $this->data['main_content'] = 'question/form.php';

        $this->load->view('main_board', $this->data);
    }

    private function validateForm() {
        foreach ($this->input->post('question_description') as $language_id => $value) {
            if (empty($value['question'])) {
                $langname = $this->language_model->getLanguage($language_id);
                $this->error['question'][$language_id] = sprintf($this->lang->line('error_question'), $langname->language_name);
            }
        }
        if (!$this->error) {
            return true;
        } else {
            return false;
        }
    }

}