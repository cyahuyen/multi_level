<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Fees_Transactions extends CI_Controller {

    var $currency_id;
    var $name;
    var $active;
    var $data;

    function __construct() {
        parent::__construct();
        $this->load->library('session');
        $this->load->library('ion_auth');
        $this->load->library('form_validation');
        $this->load->database();
        $this->load->helper('form');
        $this->load->library('document');
        $this->load->helper('url');
        $this->load->library('pagination');
        $this->lang->load('currencies');
        $this->load->model('currencies_model', '', TRUE);
        $posts = $this->input->post();
        $this->load->library('user_login');
        $module_name = $this->router->fetch_class();
        $action_name = $this->router->fetch_method();

        if (!$this->user_login->hasPermission($module_name, $action_name)) {
            $this->session->set_flashdata('permission', 'You do not have permission to access this page, please refer to your system administrator.');
            redirect('home');
        }

        if ((!$this->session->userdata('admin_logged')) || (!$this->ion_auth->logged_in())) {
            redirect('login/index/', 'refresh');
        }
    }

    public function index() {

        $this->document->setTitle($this->lang->line('fee_title'));

        $this->data['title'] = $this->document->getTitle();

        $p = $this->uri->segment(3);
        if (isset($p)) {
            $page = $this->uri->segment(3);
        } else {
            $page = 1;
        }

        $this->data['headding_title'] = $this->lang->line('fee_title');
        $this->data['colum_name'] = $this->lang->line('colum_name');
        $this->data['colum_code'] = $this->lang->line('colum_code');
        $this->data['colum_fee'] = $this->lang->line('colum_fee');
        $this->data['colum_action'] = $this->lang->line('colum_action');

        $session = $this->session->flashdata('message');
        if (isset($session)) {
            $this->data['success'] = $session;
        } else {
            $this->data['success'] = '';
        }

        $total_currencies = $this->currencies_model->totalCurrencies();

        $data = array(
            'start' => ($page - 1) * 5,
            'limit' => 5
        );

        $fees = $this->currencies_model->getCurrencies($data);

        $this->data['fees'] = array();

        foreach ($fees as $fee) {
            if ($fee->currencies_id) {
                $edit = site_url('fees_transactions/update/' . $fee->currencies_id);
            }
            if (empty($fee->symbol_left)) {
                $symbol = $fee->symbol_right;
            } else {
                $symbol = $fee->symbol_left;
            }

            $this->data['fees'][] = array(
                'currencies_id' => $fee->currencies_id,
                'title' => $fee->title,
                'code' => $fee->code,
                'symbol' => $symbol,
                'fee' => $fee->fee,
                'edit' => $edit,
            );
        }

        $pagination = $this->pagination;
        $pagination->total = $total_currencies;
        $pagination->page = $page;
        $pagination->limit = 5;
        $pagination->url = site_url('fees_transactions/index/' . '{page}');

        $this->data['pagination'] = $pagination->render();

        $this->data['main_content'] = 'currencies/fee_list.php';

        $this->load->view('main_board', $this->data);
    }

    public function update() {

        if (($this->input->server('REQUEST_METHOD') === 'POST') && $this->validateForm()) {

            $this->currencies_model->updateFee($this->uri->segment(3), $this->input->post());

            $this->session->set_flashdata('message', $this->lang->line('text_success'));

            redirect('fees_transactions/index');
        }
        $this->getForm();
    }

    public function getForm() {

        $this->document->setTitle($this->lang->line('fee_title'));

        $this->data['title'] = $this->document->getTitle();

        $this->data['fee_title'] = $this->lang->line('fee_title');

        $this->data['text_name'] = $this->lang->line('text_name');
        $this->data['text_code'] = $this->lang->line('text_code');
        $this->data['text_fee'] = $this->lang->line('text_fee');
        $this->data['text_exam'] = $this->lang->line('text_exam');

        $this->data['button_save'] = $this->lang->line('button_save');
        $this->data['button_cancel'] = $this->lang->line('button_cancel');

        $id = $this->uri->segment(3);

        $this->data['action'] = site_url('fees_transactions/update/' . $id);

        $this->data['cancel'] = site_url('fees_transactions/index');

        if ($id) {
            $fee_info = $this->currencies_model->getCurrencie($id);
        }

        $this->data['title'] = $fee_info->title;
        $this->data['code'] = $fee_info->code;
        if (isset($posts['fee'])) {
            $this->data['fee'] = $posts['fee'];
        } elseif (!empty($fee_info)) {
            $this->data['fee'] = $fee_info->fee;
        } else {
            $this->data['fee'] = '';
        }

        $this->data['main_content'] = 'currencies/fee_form.php';

        $this->load->view('main_board', $this->data);
    }

    private function validateForm() {
        $this->form_validation->set_rules('fee', 'lang:error_fee', 'required|trim|xss_clean|numeric');
        if ($this->form_validation->run() == TRUE) {
            return true;
        } else {
            return false;
        }
    }

}